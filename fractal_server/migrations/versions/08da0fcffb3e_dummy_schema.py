"""dummy schema

Revision ID: 08da0fcffb3e
Revises: 
Create Date: 2024-02-01 17:10:24.671446

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '08da0fcffb3e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('read_only', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp_created', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_oauth',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('slurm_user', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('slurm_accounts', sa.JSON(), server_default='[]', nullable=False),
    sa.Column('cache_dir', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_oauth', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_oauth_email'), ['email'], unique=True)

    op.create_table('linkuserproject',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_oauth.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'user_id')
    )
    op.create_table('oauthaccount',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('oauth_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expires_at', sa.Integer(), nullable=True),
    sa.Column('refresh_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('account_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('account_email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_oauth.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('oauthaccount', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_oauthaccount_account_id'), ['account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_oauthaccount_oauth_name'), ['oauth_name'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('oauthaccount', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_oauthaccount_oauth_name'))
        batch_op.drop_index(batch_op.f('ix_oauthaccount_account_id'))

    op.drop_table('oauthaccount')
    op.drop_table('linkuserproject')
    with op.batch_alter_table('user_oauth', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_oauth_email'))

    op.drop_table('user_oauth')
    op.drop_table('project')
    # ### end Alembic commands ###
